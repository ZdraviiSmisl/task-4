{"version":3,"sources":["Components/Greetiing/Greeting.module.css","Components/Skills/StyleSkills.module.css","Components/AddNewFriend/AddNewFriend.module.css","Components/Skills/Skill/StyleSkill.module.css","Components/AddNewFriend/Friend/Friend.module.css","Components/Greetiing/Greeting.jsx","Components/Skills/Skill/SkillComponent.jsx","Components/Skills/SkillsComponent.jsx","Components/AddNewFriend/Friend/Friend.jsx","Components/AddNewFriend/AddNewFriend.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Greeting","props","newUserName","React","createRef","onAddNewUserNameClick","userName","current","value","addName","render","className","style","Wrap","Counter","counter","say","ref","Click","onClick","Component","SkillComponent","skill","title","SkillsComponent","skillElements","skills","map","key","id","h4","Friend","name","AddNewFriend","newFriend","names","n","wrap","App","state","newName","alert","newNames","setState","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,MAAQ,wBAAwB,IAAM,wB,gBCA1HD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,GAAK,0B,gBCA5DD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,6B,kBCA3ED,EAAOC,QAAU,CAAC,MAAQ,4B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,sNCmCZC,E,YAhCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAIVC,YAAcC,IAAMC,YALD,EAOnBC,sBAAwB,WACpB,IAAIC,EAAW,EAAKJ,YAAYK,QAAQC,MACxC,EAAKN,YAAYK,QAAQC,MAAQ,GACjC,EAAKP,MAAMQ,QAAQH,IAVJ,EAcnBI,OAAS,WAEL,OAEI,yBAAKC,UAAWC,IAAMC,MAClB,0BAAMF,UAAWC,IAAME,SAAvB,IAAkC,EAAKb,MAAMc,QAA7C,KACA,wBAAIJ,UAAWC,IAAMI,KAArB,uNACA,2BAAOC,IAAK,EAAKf,cACjB,4BAAQS,UAAWC,IAAMM,MAAOC,QAAS,EAAKd,uBAA9C,YAtBO,E,2BADAF,IAAMiB,W,iBCYdC,EAbO,SAACpB,GAGnB,OACA,yBAAKU,UAAWC,IAAMU,OAElB,8BAAOrB,EAAMsB,S,gBCWNC,EAfS,SAACvB,GAIrB,IAAMwB,EAAgBxB,EAAMyB,OAAOC,KAAI,SAAAL,GAAK,OAAI,kBAAC,EAAD,CAAgBM,IAAKN,EAAMO,GAAIN,MAAOD,EAAMC,WAE5F,OACI,yBAAKZ,UAAWC,IAAMc,QAClB,wBAAIf,UAAWC,IAAMkB,IAArB,aACCL,I,iCCMEM,EAdA,SAAC9B,GAGZ,OAEI,yBAAKU,UAAWC,IAAMmB,QACjB9B,EAAM+B,OCeJC,E,2MAlBXvB,OAAS,WACL,IAAIwB,EAAY,EAAKjC,MAAMkC,MAAMR,KAAI,SAAAS,GAAC,OAAI,kBAAC,EAAD,CAAQR,IAAKQ,EAAEP,GAAIG,KAAMI,EAAEJ,UACrE,OAEI,yBAAKrB,UAAWC,IAAMqB,cAClB,gHACA,yBAAKtB,UAAWC,IAAMyB,MACjBH,K,6BAVM/B,IAAMiB,WCyClBkB,E,2MAtCXC,MAAQ,CACJxB,QAAS,EACToB,MAAO,GACPT,OAAQ,CAAC,CAACG,GAAI,EAAGN,MAAO,YAAa,CAACM,GAAI,EAAGN,MAAO,UAAW,CAACM,GAAI,EAAGN,MAAO,c,EAIlFd,QAAU,SAACH,GACP,IAAIkC,EAAU,CACVX,GAAI,EAAKU,MAAMxB,QACfiB,KAAM1B,GAGVmC,MAAM,mFAAD,OAAmBnC,IACxB,IAAIoC,EAAQ,sBAAO,EAAKH,MAAMJ,OAAlB,CAAyBK,IACrC,EAAKG,SAAS,CACVR,MAAOO,EAAU3B,QAAS,EAAKwB,MAAMxB,QAAU,K,EAKvDL,OAAS,WAEL,OAEI,6BACI,yBAAKC,UAAU,OACX,0BAAMA,UAAU,QAAhB,kRACA,wBAAIA,UAAU,MAAd,oFACA,kBAAC,EAAD,CAAUF,QAAS,EAAKA,QAASM,QAAS,EAAKwB,MAAMxB,UACrD,kBAAC,EAAD,CAAiBW,OAAQ,EAAKa,MAAMb,SACpC,kBAAC,EAAD,CAAcS,MAAO,EAAKI,MAAMJ,W,6BAhClChC,IAAMiB,WCKJwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASvC,OAAO,kBAAC,EAAD,MAASwC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3679bea1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"Greeting_Wrap__3wBll\",\"Counter\":\"Greeting_Counter__2o6kl\",\"Click\":\"Greeting_Click__10bsI\",\"say\":\"Greeting_say__390TS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"StyleSkills_skills__2zDDk\",\"h4\":\"StyleSkills_h4__3Aqag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewFriend\":\"AddNewFriend_AddNewFriend__2F2iJ\",\"wrap\":\"AddNewFriend_wrap__15AU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"StyleSkill_skill__XPRZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__Bt-Yg\"};","import React from 'react';\nimport style from './Greeting.module.css';\n\nclass Greeting extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    newUserName = React.createRef();\n\n    onAddNewUserNameClick = () => {\n        let userName = this.newUserName.current.value;\n        this.newUserName.current.value = '';\n        this.props.addName(userName)\n    };\n\n\n    render = () => {\n\n        return (\n\n            <div className={style.Wrap}>\n                <span className={style.Counter}> {this.props.counter} </span>\n                <h3 className={style.say}>Ну,рассказывай,как тебя зовут или кличут?</h3>\n                <input ref={this.newUserName}/>\n                <button className={style.Click} onClick={this.onAddNewUserNameClick}> hello</button>\n\n\n            </div>\n\n\n        );\n    }\n}\n\nexport default Greeting;\n\n","import  React from 'react';\r\nimport style from './StyleSkill.module.css'\r\nconst SkillComponent =(props)=> {\r\ndebugger;\r\n\r\n    return (\r\n    <div className={style.skill}>\r\n\r\n        <span>{props.title}</span>\r\n\r\n\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default SkillComponent;","import React from 'react';\r\nimport SkillComponent from './Skill/SkillComponent';\r\nimport style from './StyleSkills.module.css'\r\n\r\nconst SkillsComponent = (props) => {\r\n    debugger;\r\n\r\n\r\n    const skillElements = props.skills.map(skill => <SkillComponent key={skill.id} title={skill.title}/>);\r\n\r\n    return (\r\n        <div className={style.skills}>\r\n            <h4 className={style.h4}>My Skills</h4>\r\n            {skillElements}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SkillsComponent;","import React from 'react';\nimport style from './Friend.module.css';\n\n\n\nconst Friend = (props) => {\n\n\n    return (\n\n        <div className={style.Friend}>\n            {props.name}\n        </div>\n\n\n    );\n};\n\n\nexport default Friend;\n\n","import React from 'react';\nimport style from './AddNewFriend.module.css';\nimport Friend from \"./Friend/Friend\";\n\n\nclass AddNewFriend extends React.Component {\n\n\n    render = () => {\n        let newFriend = this.props.names.map(n => <Friend key={n.id} name={n.name}/>);\n        return (\n\n            <div className={style.AddNewFriend}>\n                <h3>Тут кантовался:</h3>\n                <div className={style.wrap}>\n                    {newFriend}\n                </div>\n\n\n            </div>\n\n\n        );\n    }\n}\n\nexport default AddNewFriend;\n\n","import React from 'react';\n\nimport './App.css';\nimport Greeting from './Components/Greetiing/Greeting';\nimport SkillsComponent from './Components/Skills/SkillsComponent';\nimport AddNewFriend from './Components/AddNewFriend/AddNewFriend';\n\nclass App extends React.Component {\n    state = {\n        counter: 1,\n        names: [],\n        skills: [{id: 1, title: 'teetotal'}, {id: 2, title: 'smoker'}, {id: 3, title: 'homebody'}],\n\n    };\n\n    addName = (userName) => {\n        let newName = {\n            id: this.state.counter,\n            name: userName\n\n        };\n        alert(`Ну,рассказывай ${userName}`);\n        let newNames = [...this.state.names, newName];\n        this.setState({\n            names: newNames, counter: this.state.counter + 1\n        });\n    };\n\n\n    render = () => {\n        debugger;\n        return (\n\n            <div>\n                <div className='App'>\n                    <span className='name'>Здравствуй, меня зовут Арапов Евгений Владимирович</span>\n                    <h5 className='h5'>Я за минимализм</h5>\n                    <Greeting addName={this.addName} counter={this.state.counter}/>\n                    <SkillsComponent skills={this.state.skills}/>\n                    <AddNewFriend names={this.state.names}/>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}