{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Tuesday/TodoListTasks/TodoListTask/TodoListTask.module.css","Components/Tuesday/TodoListFooter/TodoListFooter.module.css","Components/Main/Main.module.css","Components/Tuesday/TodoListHeader/TodoListHeader.module.css","Components/Greetiing/Greeting.module.css","Components/Tuesday/Todolist/Todolist.module.css","Components/Monday/Monday.module.css","Components/Tuesday/Tuesday.module.css","Components/Tuesday/AddNewItemForm/AddNewItemForm.module.css","Reusable-components/Input.module.css","Components/Skills/StyleSkills.module.css","Components/AddNewFriend/AddNewFriend.module.css","App.module.css","assets/images/preloader.svg","Components/Tuesday/TodoListTasks/TodoListTasks.module.css","Components/Skills/Skill/StyleSkill.module.css","Components/AddNewFriend/Friend/Friend.module.css","Components/StartComponent/StartComponent.module.css","OutsideComponents/Preloader/Preloader.js","Components/Tuesday/AddNewItemForm/AddNewItemForm.jsx","Components/Tuesday/TodoListHeader/TodoListHeader.jsx","OutsideComponents/Tooltip/Tooltipe.jsx","Components/Tuesday/TodoListTasks/TodoListTask/TodoListTask.jsx","Components/Tuesday/TodoListTasks/TodoListTasks.jsx","Components/Tuesday/TodoListFooter/TodoListFooter.jsx","Components/Tuesday/Todolist/Todolist.jsx","Components/Tuesday/Tuesday.jsx","Reusable-components/Input.jsx","Components/Greetiing/Greeting.jsx","Components/Skills/Skill/SkillComponent.jsx","Components/Skills/SkillsComponent.jsx","Components/AddNewFriend/Friend/Friend.jsx","Components/AddNewFriend/AddNewFriend.jsx","Components/Monday/Monday.jsx","Components/Navbar/Navbar.jsx","Components/StartComponent/StartComponent.jsx","Components/Main/Main.jsx","App.jsx","serviceWorker.js","Store/Store.js","index.jsx"],"names":["module","exports","Preloader","props","src","preloader","AddNewItemForm","state","error","title","onAddItem","newText","setState","addItem","onTitleChanged","e","currentTarget","value","onKeyPress","key","render","classNameForInput","style","className","todoList_newTaskForm","type","placeholder","onChange","onClick","React","Component","TodoListHeader","inputEmptyDisable","onAddTaskClick","newTitle","addTask","onAddText","onPressEnter","alert","todoListHeader","todoListHeaderTitle","todoListNewTaskForm","add","disabled","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","CustomizedTooltips","Fragment","created","updated","finished","children","TodoListTask","editMode","onIsDoneChanged","changeStatus","task","id","checked","activatedEditMode","deactivatedEditMode","changeTitle","clickForDel","removeTask","togglePriority","priority","target","changePriority","taskClass","this","isDone","todoListTask","done","changePriorityClass","low","middle","high","wrap_task","checkbox__class","input","autoFocus","onBlur","select__class","delete__task","TodoListTasks","tasksElements","tasks","map","todoListTasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onClickIsHidden","onClickIsShow","classForAll","filterValue","filterActive","classForCompleted","classForActive","wrap_buttons","button__show","Todolist","nextTaskId","taskId","filter","t","deleteTask","whenCreatedTask","Date","newTask","add_Task","removeList","deleteList","changeTask","newFilterValue","whenFinishedTask","whenUpdatedTask","obj","change_Task","wrap","todoList","button_delete","ConnectedTodolist","connect","dispatch","todoListId","Tuesday","nextTodolistId","todoLists","loading","onAddTodoList","newTodoList","addTodoList","setTimeout","loadContent","todoListsElements","tl","wrap_todolists","ConnectedApp","Input","InputWrap","onChangeNameInput","Greeting","onAddNewUserNameClick","userName","addName","checkName","changeStatusButton","Wrap","Counter","counter","say","addNameButtonStatus","Click","SkillComponent","skill","SkillsComponent","skillElements","skills","h4","Friend","name","AddNewFriend","newFriend","names","n","Monday","newName","newNames","h5","NavBar","selectedPage","onSelected","page","getAttribute","wrapNavBar","menu","item","to","activeClassName","active","StartComponent","StartPicture","Main","wrap__main","nav","wrap_wrap_navbar","b","b2","wrap__days","path","App","Boolean","window","location","hostname","match","initialState","store","createStore","action","todo","list","l","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6d3aacb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapNavBar\":\"Navbar_wrapNavBar__1PnRT\",\"item\":\"Navbar_item__2FtLv\",\"active\":\"Navbar_active__1ZtBm\",\"menu\":\"Navbar_menu__2cgMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTask_todoListTask__22O_q\",\"done\":\"TodoListTask_done__1E4ov\",\"low\":\"TodoListTask_low__2eAQe\",\"middle\":\"TodoListTask_middle__3UeKG\",\"high\":\"TodoListTask_high__8LfYd\",\"wrap_task\":\"TodoListTask_wrap_task__1MtkE\",\"input\":\"TodoListTask_input__1aot6\",\"select__class\":\"TodoListTask_select__class__2ZRG1\",\"delete__task\":\"TodoListTask_delete__task__zIFv_\",\"checkbox__class\":\"TodoListTask_checkbox__class__wGyNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__1_C8r\",\"wrap_buttons\":\"TodoListFooter_wrap_buttons__1BmHh\",\"button__show\":\"TodoListFooter_button__show__EcCNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap__main\":\"Main_wrap__main__1rvfe\",\"b\":\"Main_b__16C6u\",\"b2\":\"Main_b2__2k666\",\"nav\":\"Main_nav__2jpWA\",\"wrap__days\":\"Main_wrap__days__3KR73\",\"wrap_wrap_navbar\":\"Main_wrap_wrap_navbar__3hAoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListHeader\":\"TodoListHeader_todoListHeader__25Nqf\",\"todoListHeaderTitle\":\"TodoListHeader_todoListHeaderTitle__3Sns_\",\"todoListNewTaskForm\":\"TodoListHeader_todoListNewTaskForm__2cAzX\",\"error\":\"TodoListHeader_error__lOJ01\",\"add\":\"TodoListHeader_add__u8exW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"Greeting_Wrap__DpcNS\",\"Counter\":\"Greeting_Counter__270M7\",\"Click\":\"Greeting_Click__3vLPI\",\"say\":\"Greeting_say__1eKsL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"Todolist_todoList__xjxDu\",\"button_delete\":\"Todolist_button_delete__2Wuxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"Monday_Wrap__h5vUU\",\"name\":\"Monday_name__1gpS1\",\"h5\":\"Monday_h5__3bs7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Tuesday_wrap__1x_NA\",\"wrap_todolists\":\"Tuesday_wrap_todolists__2N2sB\",\"todoList\":\"Tuesday_todoList__3o1-F\",\"todoList-task\":\"Tuesday_todoList-task__3HlT_\",\"done\":\"Tuesday_done__d1DJN\",\"filter-active\":\"Tuesday_filter-active__kmQpV\",\"error\":\"Tuesday_error__hdnjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList_newTaskForm\":\"AddNewItemForm_todoList_newTaskForm__3VpfM\",\"error\":\"AddNewItemForm_error__1XYdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputWrap\":\"Input_InputWrap__2a0EK\",\"Input\":\"Input_Input__caBEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"StyleSkills_skills__1rgoK\",\"h4\":\"StyleSkills_h4__qDkQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewFriend\":\"AddNewFriend_AddNewFriend__3mFvx\",\"wrap\":\"AddNewFriend_wrap__2vXDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App___zQhV\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.1abb8447.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTasks\":\"TodoListTasks_todoListTasks__25sCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"StyleSkill_skill__2D2vy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__3CiGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartPicture\":\"StartComponent_StartPicture__1I5im\"};","import preloader from \"./../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\nlet Preloader=(props)=>{\r\n    return (\r\n\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n);\r\n};\r\nexport default Preloader;\r\n\r\n\r\n","import React from \"react\";\r\nimport style from './AddNewItemForm.module.css'\r\n\r\n class AddNewItemForm extends React.Component {\r\n    state = {\r\n        error: false,\r\n        title: \"\"\r\n    };\r\n\r\n    onAddItem = () => {\r\n        let newText = this.state.title;\r\n        this.setState({title: \"\"});\r\n\r\n        if (newText === \"\") {\r\n            this.setState({error: true});\r\n        } else {\r\n            this.setState({error: false});\r\n            // передаём новый текст наружу\r\n            this.props.addItem(newText);\r\n        }\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.onAddItem()\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        let classNameForInput = this.state.error ? style.error : \"\";\r\n\r\n        return (\r\n            <div className={style.todoList_newTaskForm}>\r\n                <input className={classNameForInput} type=\"text\" placeholder=\"New task name\"\r\n                       onChange={this.onTitleChanged}\r\n                       onKeyPress={this.onKeyPress}\r\n                       value={this.state.title}\r\n                />\r\n                <button onClick={this.onAddItem}>Add</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;","import React from 'react';\r\nimport style from './TodoListHeader.module.css'\r\n\r\nclass TodoListHeader extends React.Component {\r\n    state = {\r\n        error: false,\r\n        title: '',\r\n        inputEmptyDisable: false\r\n    };\r\n    onAddTaskClick = () => {\r\n        let newTitle = this.state.title;\r\n     this.setState({title:''});\r\n        if (newTitle === '') {\r\n            this.setState({error: true,inputEmptyDisable: true})\r\n        } else {\r\n            this.setState({error: false});\r\n            this.props.addTask(newTitle);\r\n        }\r\n    };\r\n    onAddText = (e) => {\r\n        this.setState({error: false, title: e.currentTarget.value, inputEmptyDisable: false});\r\n\r\n    };\r\n\r\n    onPressEnter = (e) => {\r\n        if (e.key === 'Enter') alert('ты клацнул по Enter');\r\n\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n\r\n            <div className={style.todoListHeader}>\r\n                <h3 className={style.todoListHeaderTitle}>{this.props.title}</h3>\r\n                <div className={style.todoListNewTaskForm}>\r\n                    <input  onKeyPress={this.onPressEnter}\r\n                           onChange={this.onAddText}\r\n                           className={this.state.error ? style.error : ''}\r\n                           type=\"text\"\r\n                           placeholder=\"New task name\"\r\n                           value={this.state.title}/>\r\n                    <button className={style.add} onClick={this.onAddTaskClick} disabled={this.state.inputEmptyDisable}>Add</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 220,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default function CustomizedTooltips(props) {\r\n    return (\r\n        <HtmlTooltip\r\n            title={\r\n                <React.Fragment>\r\n                    <div>created:{props.created}</div>\r\n                    <div>updated:{props.updated}</div>\r\n                    <div>finished:{props.finished}</div>\r\n                </React.Fragment>\r\n            }\r\n        >\r\n            {props.children}\r\n        </HtmlTooltip>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './TodoListTask.module.css';\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CustomizedTooltips from \"../../../../OutsideComponents/Tooltip/Tooltipe\";\r\n\r\nclass TodoListTask extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n    };\r\n    onIsDoneChanged = (e) => {\r\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked);\r\n    };\r\n    activatedEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n    deactivatedEditMode = () => {\r\n        this.setState({editMode: false})\r\n    };\r\n    onTitleChanged = (e) => {\r\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value);\r\n    };\r\n    clickForDel = () => {\r\n        this.props.removeTask(this.props.task.id);\r\n    };\r\n    togglePriority = (e) => {\r\n        let priority = e.target.value;\r\n        this.props.changePriority(this.props.task.id, priority)\r\n    };\r\n\r\n    render() {\r\n        let taskClass = this.props.task.isDone ? style.todoListTask + '' + style.done : style.todoListTask;\r\n        let changePriorityClass = this.props.task.priority === 'low' ? style.low : this.props.task.priority === 'middle'\r\n            ? style.middle : this.props.task.priority === 'high' ? style.high : '';\r\n\r\n        return (\r\n            /* <Tooltip placement=\"top-start\" title={`created: ${this.props.task.created}\r\n              updated: ${this.props.task.updated}\r\n              finished: ${this.props.task.finished} `}>*/\r\n            <CustomizedTooltips created={this.props.task.created}\r\n                                updated={this.props.task.updated}\r\n                                finished={this.props.task.finished}>\r\n                <div className={style.wrap_task}>\r\n                    <div className={taskClass}>\r\n                        <input className={style.checkbox__class} type='checkbox'\r\n                               checked={this.props.task.isDone}\r\n                               onChange={this.onIsDoneChanged}\r\n                        />\r\n                        {this.state.editMode ?\r\n                            <input className={style.input} autoFocus={true}\r\n                                   onBlur={this.deactivatedEditMode}\r\n                                   onChange={this.onTitleChanged}/>\r\n                            :\r\n                            <span onClick={this.activatedEditMode}\r\n                                  className={changePriorityClass}>{this.props.task.id} {this.props.task.title} </span>\r\n                        }\r\n                        <select className={style.select__class} value={this.props.task.priority}\r\n                                onChange={this.togglePriority}>\r\n                            <option value=\"high\">high</option>\r\n                            <option value=\"low\">low</option>\r\n                            <option value=\"middle\">middle</option>\r\n                        </select>\r\n                        <button className={style.delete__task} onClick={this.clickForDel}>X</button>\r\n                    </div>\r\n                </div>\r\n            </CustomizedTooltips>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\nTodoListTask.propTypes = {\r\n    tasks: PropTypes.string,\r\n    isDone: PropTypes.bool,\r\n    priority: PropTypes.string\r\n};","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './TodoListTasks.module.css'\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n        let tasksElements = this.props.tasks.map(task =>\r\n            <TodoListTask\r\n                key={task.id}\r\n                task={task}\r\n                removeTask={this.props.removeTask}\r\n                changeStatus={this.props.changeStatus}\r\n                changeTitle={this.props.changeTitle}\r\n                changePriority={this.props.changePriority}\r\n            />);\r\n        return (\r\n            <div className={style.todoListTasks}>\r\n                {tasksElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\nTodoListTasks.propTypes = {\r\n    tasks: PropTypes.array\r\n};\r\n\r\n/* title={task.title}\r\n          isDone={task.isDone}\r\n          priority={task.priority}*/","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './TodoListFooter.module.css';\r\n\r\nclass TodoListFooter extends React.Component {\r\n    state = {\r\n        isHidden: false\r\n    };\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    };\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    };\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    };\r\n    onClickIsHidden = () => {\r\n        this.setState({isHidden: false})\r\n    };\r\n\r\n    onClickIsShow = () => {\r\n        this.setState({isHidden: true})\r\n    };\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === 'All' ? style.filterActive : '';\r\n        let classForCompleted = this.props.filterValue === 'Completed' ? style.filterActive : '';\r\n        let classForActive = this.props.filterValue === 'Active' ? style.filterActive : '';\r\n        return (\r\n\r\n            <div className=\"todoList-footer\">\r\n                {!this.state.isHidden && <div className={style.wrap_buttons}>\r\n                    <button className={classForAll}\r\n                            onClick={this.onAllFilterClick}>All\r\n                    </button>\r\n                    <button className={classForCompleted}\r\n                            onClick={this.onCompletedFilterClick}>Completed\r\n                    </button>\r\n                    <button className={classForActive}\r\n                            onClick={this.onActiveFilterClick}>Active\r\n                    </button>\r\n                    {!this.state.isHidden &&\r\n                    <button className={style.button__show}\r\n                            onClick={this.onClickIsShow}>hide</button>}\r\n                    {this.state.isHidden &&\r\n                    <button className={style.button__show}\r\n                            onClick={this.onClickIsHidden}>show</button>}\r\n                </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\nTodoListFooter.propTypes = {\r\n    filterValue: PropTypes.string\r\n};","import React from 'react';\r\nimport style from './Todolist.module.css';\r\nimport {LocalStorage} from './../../../OutsideComponents/LocalStorage';\r\nimport TodoListHeader from './../TodoListHeader/TodoListHeader'\r\nimport TodoListTasks from \"./../TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"./../TodoListFooter/TodoListFooter\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Todolist extends React.Component {\r\n\r\n    nextTaskId = 0;\r\n    state = {\r\n        tasks: [],\r\n        filterValue: \"All\",\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n    };\r\n\r\n    removeTask = (taskId) => {\r\n        let filterTasks = this.state.tasks.filter(\r\n            t => t.id !== taskId\r\n        );\r\n        this.props.deleteTask(taskId, this.props.id)\r\n    };\r\n\r\n    addTask = (newTitle) => {\r\n        let whenCreatedTask = new Date();\r\n        let newTask = {\r\n            id: this.nextTaskId,\r\n            title: newTitle,\r\n            isDone: false,\r\n            priority: 'low',\r\n            created: whenCreatedTask + '',\r\n            updated: '',\r\n            finished: ''\r\n        };\r\n        this.props.add_Task(newTask, this.props.id);\r\n        this.nextTaskId++;\r\n\r\n    };\r\n\r\n    removeList = () => {\r\n        this.props.deleteList(this.props.id);\r\n    };\r\n\r\n    changePriority = (taskId, priority) => {\r\n        this.changeTask(taskId, {priority: priority})\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        },)\r\n    };\r\n\r\n    changeStatus = (taskId, isDone) => {\r\n        let whenFinishedTask = new Date();\r\n        this.changeTask(taskId, {isDone: isDone, finished: whenFinishedTask + ''})\r\n    };\r\n\r\n    changeTitle = (taskId, newTitle) => {\r\n        let whenUpdatedTask = new Date();\r\n        this.changeTask(taskId, {title: newTitle, updated: whenUpdatedTask + ''})\r\n    };\r\n\r\n    changeTask = (taskId, obj) => {\r\n        let newTasks = this.state.tasks.map(t => {\r\n            if (t.id === taskId) {\r\n                return {...t, ...obj};\r\n            } else {\r\n                return t;\r\n            }\r\n        });\r\n        this.props.change_Task(taskId, obj, this.props.id)\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            < div className={style.wrap}>\r\n                < div className={style.todoList}>\r\n                    <TodoListHeader addTask={this.addTask} title={this.props.title}/>\r\n                    <TodoListTasks\r\n                        changePriority={this.changePriority}\r\n                        removeTask={this.removeTask}\r\n                        changeTitle={this.changeTitle}\r\n                        changeStatus={this.changeStatus}\r\n                        tasks={this.props.tasks.filter(t => {\r\n                            switch (this.state.filterValue) {\r\n                                case 'Active':\r\n                                    return !t.isDone;\r\n                                case 'Completed':\r\n                                    return t.isDone;\r\n                                case 'All':\r\n                                    return true;\r\n                                default:\r\n                                    return true;\r\n                            }\r\n                        })}/>\r\n                    <TodoListFooter filterValue={this.state.filterValue}\r\n                                    changeFilter={this.changeFilter}/>\r\n                    <span className={style.button_delete}>\r\n                        <button onClick={this.removeList}>X</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add_Task: (newTask, todoListId) => {\r\n\r\n            const action = {\r\n                type: 'ADD-TASK',\r\n                newTask: newTask,\r\n                todoListId: todoListId\r\n            };\r\n\r\n            dispatch(action)\r\n        },\r\n        change_Task: (taskId, obj, todoListId) => {\r\n            const action = {\r\n                type: 'CHANGE_TASK',\r\n                obj: obj,\r\n                taskId: taskId,\r\n                todoListId: todoListId\r\n            };\r\n\r\n\r\n            dispatch(action)\r\n        },\r\n        deleteTask: (taskId, todoListId) => {\r\n            const action = {\r\n                type: 'DELETE_TASK',\r\n                taskId: taskId,\r\n                todoListId: todoListId\r\n            };\r\n            dispatch(action)\r\n        },\r\n        deleteList: (todoListId) => {\r\n\r\n            const action = {\r\n                type: 'DELETE_LIST',\r\n                todoListId: todoListId\r\n            };\r\n            dispatch(action)\r\n        }\r\n    }\r\n};\r\nconst ConnectedTodolist = connect(null, mapDispatchToProps)(Todolist);\r\nexport default ConnectedTodolist;\r\n\r\n\r\n/* saveState = () => {\r\n        LocalStorage.saveTasks(this.state, this.props.id);\r\n    };\r\n*/\r\n/* restoreState = () => {\r\n     let tasks = LocalStorage.getTasks();\r\n     if (tasks !== null) {\r\n         this.setState(tasks);\r\n     }\r\n };*/\r\n","import React from 'react';\r\nimport style from './Tuesday.module.css';\r\nimport {LocalStorage} from \"../../OutsideComponents/LocalStorage\";\r\nimport Preloader from \"../../OutsideComponents/Preloader/Preloader\";\r\nimport AddNewItemForm from \"./AddNewItemForm/AddNewItemForm\";\r\nimport Todolist from \"./Todolist/Todolist\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Tuesday extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    nextTodolistId = 0;\r\n    state = {\r\n        todoLists: [\r\n            {\r\n                title: 'every day',\r\n                id: 1\r\n            }\r\n        ],\r\n        loading: true,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.props.loadContent();\r\n            this.setState({loading: false});\r\n        }, 3000);\r\n    }\r\n\r\n\r\n\r\n    onAddTodoList = (title) => {\r\n        const newTodoList = {\r\n            title: title,\r\n            id: this.props.nextTodolistId,\r\n            tasks: []\r\n        };\r\n        this.props.addTodoList(newTodoList);\r\n        this.nextTodolistId++;\r\n    };\r\n\r\n    render() {\r\n\r\n        const todoListsElements = this.props.todoLists.map(\r\n            tl => <Todolist key={tl.id} id={tl.id} title={tl.title} tasks={tl.tasks}\r\n            />);\r\n        return (\r\n            <>\r\n                {this.props.loading ? <Preloader/> :\r\n                    <div className={style.wrap}>\r\n                        <div>\r\n                            <AddNewItemForm addItem={this.onAddTodoList}/>\r\n                        </div>\r\n                        <div className={style.wrap_todolists}>\r\n                            {todoListsElements}\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        todoLists: state.todoLists,\r\n        nextTodolistId: state.nextTodolistId,\r\n        loading: state.loading\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTodoList: (newTodoList) => {\r\n\r\n            const action = {\r\n                type: 'ADD-TODOLIST',\r\n                newTodoList: newTodoList\r\n            };\r\n\r\n            dispatch(action)\r\n        },\r\n    loadContent:()=>{\r\n            const action={\r\n                type:'SET_LOADING'\r\n            };\r\n        dispatch(action)\r\n    }\r\n\r\n    }\r\n};\r\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(Tuesday);\r\nexport default ConnectedApp;\r\n\r\n/* saveState = () => {\r\n       LocalStorage.saveTodoLists(this.state);\r\n   };*/\r\n\r\n\r\n/* restoreState = () => {\r\n     let todoLists = LocalStorage.getTodoLists();\r\n     if (todoLists != null) {\r\n         this.setState(todoLists);\r\n     }\r\n };*/","import React from \"react\";\r\nimport style from './Input.module.css';\r\n\r\nclass Input extends React.Component {\r\n    state = {\r\n        error: false\r\n\r\n    };\r\n\r\n\r\n    onPressEnter = (e) => {\r\n        if (e.key === 'Enter') alert('ты клацнул по Enter');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.InputWrap}>\r\n                <input onKeyPress={this.onPressEnter}\r\n                       onChange={this.props.onChangeNameInput}\r\n                       className={style.Input}\r\n                       type=\"text\"\r\n                       placeholder=\"нет времени объяснять,пиши сюда!\"\r\n                       value={this.props.value}/>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport style from './Greeting.module.css';\r\nimport Input from \"../../Reusable-components/Input\";\r\n\r\nclass Greeting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n\r\n    onAddNewUserNameClick = () => {\r\n        let userName = this.state.value;\r\n        this.setState({value: ''});\r\n        this.props.addName(userName)\r\n    };\r\n    onChangeNameInput = (e) => {\r\n        let checkName = e.currentTarget.value;\r\n        this.setState({value: checkName});\r\n        this.props.changeStatusButton(checkName)\r\n\r\n    };\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n\r\n            <div className={style.Wrap}>\r\n                <span className={style.Counter}> {this.props.counter} </span>\r\n                <h3 className={style.say}>Ну,рассказывай,как тебя зовут или кличут?</h3>\r\n                <Input value={this.state.value} addName={this.props.addName} onChangeNameInput={this.onChangeNameInput}\r\n                       addNameButtonStatus={this.props.addNameButtonStatus}/>\r\n                <button className={style.Click} onClick={this.onAddNewUserNameClick}\r\n                        disabled={this.props.addNameButtonStatus}> hello\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greeting;\r\n\r\n","import  React from 'react';\r\nimport style from './StyleSkill.module.css'\r\nconst SkillComponent =(props)=> {\r\n\r\n\r\n    return (\r\n    <div className={style.skill}>\r\n\r\n        <span>{props.title}</span>\r\n\r\n\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default SkillComponent;","import React from 'react';\r\nimport SkillComponent from './Skill/SkillComponent';\r\nimport style from './StyleSkills.module.css'\r\n\r\nconst SkillsComponent = (props) => {\r\n\r\n\r\n\r\n    const skillElements = props.skills.map(skill => <SkillComponent key={skill.id} title={skill.title}/>);\r\n\r\n    return (\r\n        <div className={style.skills}>\r\n            <h4 className={style.h4}>My Skills:</h4>\r\n            {skillElements}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SkillsComponent;","import React from 'react';\r\nimport style from './Friend.module.css';\r\n\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.Friend}>\r\n            {props.name}\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Friend;\r\n\r\n","import React from 'react';\r\nimport style from './AddNewFriend.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\n\r\n\r\nclass AddNewFriend extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        let newFriend = this.props.names.map(n => <Friend key={n.id} name={n.name}/>);\r\n        return (\r\n\r\n            <div className={style.AddNewFriend}>\r\n                <h3>Тут кантовался:</h3>\r\n                <div className={style.wrap}>\r\n                    {newFriend}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewFriend;\r\n\r\n","import React from 'react';\r\nimport style from './Monday.module.css';\r\nimport Greeting from './../Greetiing/Greeting';\r\nimport SkillsComponent from './../Skills/SkillsComponent';\r\nimport AddNewFriend from './../AddNewFriend/AddNewFriend';\r\n\r\nclass Monday extends React.Component {\r\n    state = {\r\n        counter: 1,\r\n        names: [],\r\n        skills: [{id: 1, title: 'Курящий спортсмен'}, {id: 2, title: 'Упор(ный)отый'}, {\r\n            id: 3,\r\n            title: 'Carolina Reaper-one love'\r\n        }],\r\n        addNameButtonStatus: true\r\n    };\r\n\r\n    addName = (userName) => {\r\n        let newName = {\r\n            id: this.state.counter,\r\n            name: userName\r\n\r\n        };\r\n        alert(`Тут бесплатно не наливают: ${userName}`);\r\n        let newNames = [...this.state.names, newName];\r\n        this.setState({\r\n            names: newNames, counter: this.state.counter + 1, addNameButtonStatus: true\r\n        });\r\n    };\r\n    changeStatusButton = (checkName) => {\r\n        if (checkName === '') {\r\n            this.setState({addNameButtonStatus: true})\r\n        } else {\r\n            this.setState({addNameButtonStatus: false})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={style.Wrap}>\r\n                    <span className={style.name}>Здравствуй, меня зовут Арапов Евгений Владимирович</span>\r\n                    <h5 className={style.h5}>Я за минимализм</h5>\r\n                    <Greeting addName={this.addName} counter={this.state.counter}\r\n                              changeStatusButton={this.changeStatusButton}\r\n                              addNameButtonStatus={this.state.addNameButtonStatus}/>\r\n                    <SkillsComponent skills={this.state.skills}/>\r\n                    <AddNewFriend names={this.state.names}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Monday;","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        selectedPage: ''\r\n    };\r\n    onSelected = (e) => {\r\n        let page = e.currentTarget.getAttribute('href');\r\n        this.setState({selectedPage: page})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <nav className={style.wrapNavBar}>\r\n                <h3 className={style.menu}>MENU</h3>\r\n                <div className={style.item}>\r\n                    <NavLink to='/Monday' onClick={this.onSelected} activeClassName={style.active}>Monday</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to='/tuesday' onClick={this.onSelected} activeClassName={style.active}>Tuesday</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to='/wednesday' onClick={this.onSelected}\r\n                             activeClassName={style.active}>Wednesday</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to='/thursday' onClick={this.onSelected} activeClassName={style.active}>Thursday</NavLink>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <NavLink to='/friday' onClick={this.onSelected} activeClassName={style.active}>Friday</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport style from './StartComponent.module.css'\r\nclass StartComponent extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <div className={style.StartPicture}>\r\n                This is the start page\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StartComponent;","import {HashRouter, Route} from \"react-router-dom\";\r\nimport Tuesday from './../Tuesday/Tuesday';\r\nimport Monday from './../Monday/Monday';\r\nimport NavBar from './../Navbar/Navbar';\r\nimport React from 'react';\r\nimport style from './Main.module.css'\r\nimport StartComponent from \"../StartComponent/StartComponent\";\r\n\r\nclass Main extends React.Component {\r\n    state = {\r\n        isHidden: false\r\n    };\r\n    onClickIsShow = () => {\r\n        this.setState({isHidden: true})\r\n    };\r\n    onClickIsHidden = () => {\r\n        this.setState({isHidden: false})\r\n    };\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className={style.wrap__main}>\r\n                    <div className={style.nav}>\r\n                        {!this.state.isHidden && <div className={style.wrap_wrap_navbar}>\r\n                            <NavBar/>\r\n                        </div>}\r\n\r\n                        {!this.state.isHidden &&\r\n                        <button className={style.b}\r\n                                onClick={this.onClickIsShow}>hide</button>}\r\n                        {this.state.isHidden\r\n                        && <button className={style.b2}\r\n                                   onClick={this.onClickIsHidden}>show</button>}\r\n                    </div>\r\n                    <div className={style.wrap__days}>        {/*  <Route path='/' render={() => <StartComponent/>}/>*/}\r\n                        <Route path='/Monday' render={() => <Monday/>}/>\r\n                        <Route path='/tuesday' render={() => <Tuesday/>}/>\r\n                        <Route path='/wednesday' render={() => <StartComponent/>}/>\r\n                        <Route path='/thursday' render={() => <StartComponent/>}/>\r\n                        <Route path='/friday' render={() => <StartComponent/>}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </HashRouter>\r\n\r\n        );\r\n    };\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport style from './App.module.css';\r\nimport Main from './Components/Main/Main';\r\n\r\nclass App extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className={style.App}>\r\n                <Main/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    loading: true,\r\n    nextTodolistId: 0\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-TODOLIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [...state.todoLists, action.newTodoList],\r\n                nextTodolistId: state.nextTodolistId + 1\r\n            };\r\n\r\n        case 'ADD-TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(tl => {\r\n                    if (tl.id === action.todoListId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n\r\n        case 'CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(todo => {\r\n                    if (todo.id === action.todoListId) {\r\n                        return {\r\n                            ...todo, tasks: todo.tasks.map(task => {\r\n                                if (task.id === action.taskId) {\r\n                                    return {...task, ...action.obj}\r\n                                } else {\r\n                                    return task;\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return todo;\r\n                    }\r\n                })\r\n            };\r\n        case 'DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list=>{\r\n                    if(list.id===action.todoListId){\r\n                        return {\r\n                            ...list,tasks:list.tasks.filter(t=>t.id !== action.taskId)\r\n                            }\r\n                        }\r\n                     else {\r\n                         return list;\r\n                    }\r\n\r\n                })\r\n            };\r\n        case 'DELETE_LIST':\r\n            return  {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(\r\n                    l => l.id !== action.todoListId)\r\n            };\r\n\r\n        case \"SET_LOADING\":\r\n            return {...state, loading: false}\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Store/Store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}